let pokemonRepo = (function () {
	let e = [],
		t = 'https://pokeapi.co/api/v2/pokemon/?limit=150',
		n = document.querySelector('#search-bar');
	function o(e) {
		return e.charAt(0).toUpperCase() + e.slice(1);
	}
	function i(t) {
		e.push(t);
	}
	function l(e) {
		a(e).then(() => {
			$('.modal-header');
			let t = $('.modal-title'),
				n = $('.modal-body');
			t.empty(), n.empty();
			let i = $('<h4>' + o(e.name) + '</h4>'),
				l = $('<img class="modal-image" style="width:200px" />');
			l.attr('src', e.imageUrl),
				l.attr('alt', `A high resolution sprite image of ${e.name}`);
			let a = `<h4>Types: ${e.types}</h4>`,
				s = `<h4> Height: ${e.height} m</h4>`,
				c = `<h4> Weight: ${e.weight} kg </h4>`;
			t.append(i), n.append(l), n.append(a), n.append(s), n.append(c);
		});
	}
	function a(e) {
		let t = e.detailsUrl;
		return fetch(t)
			.then(function (e) {
				return e.json();
			})
			.then(function (t) {
				(e.imageUrl = t.sprites.front_default),
					(e.types = t.types),
					(e.height = t.height),
					(e.weight = t.weight),
					(e.types = []),
					t.types.forEach(function (t) {
						e.types.push(' ' + o(t.type.name));
					});
			})
			.catch(function (e) {
				console.log(e);
			});
	}
	return (
		n.addEventListener('input', function () {
			let e = document.querySelectorAll('.pokemon'),
				t = n.value.toUpperCase();
			e.forEach(function (e) {
				console.log(e.innerText),
					e.innerHTML.toUpperCase().indexOf(t) > -1
						? (e.style.display = '')
						: (e.style.display = 'none');
			});
		}),
		{
			addPokemon: i,
			getAllPokemon: function () {
				return e;
			},
			checkPokemon: function (e) {
				let t = Objects.keys(e);
				t.include('name') &&
				t.include('type') &&
				t.include('height') &&
				t.include('weight')
					? pokemon.push(e)
					: alert('All items in pokemonRepo must be objects');
			},
			addListItem: function (e) {
				let t = document.querySelector('.pokemon-list'),
					n = document.createElement('li'),
					i = document.createElement('button');
				(i.innerText = o(e.name)),
					i.setAttribute('type', 'button'),
					i.classList.add('btn'),
					i.classList.add('btn-dark'),
					i.setAttribute('data-target', '#pokemonModal'),
					i.setAttribute('data-toggle', 'modal'),
					t.classList.add('list-unstyled'),
					n.classList.add('list-group-item'),
					n.classList.add('pokemon'),
					n.classList.add('col-12'),
					n.classList.add('col-md-4'),
					n.appendChild(i),
					t.appendChild(n),
					i.addEventListener('click', function () {
						l(e);
					});
			},
			loadList: function () {
				return fetch(t)
					.then(function (e) {
						return e.json();
					})
					.then(function (e) {
						e.results.forEach(function (e) {
							i({ name: e.name, detailsUrl: e.url });
						});
					})
					.catch(function (e) {
						console.log(e);
					});
			},
			loadDetails: a,
			showDetails: l,
		}
	);
})();
pokemonRepo.loadList().then(function () {
	pokemonRepo.getAllPokemon().forEach(function (e) {
		pokemonRepo.addListItem(e);
	});
});
